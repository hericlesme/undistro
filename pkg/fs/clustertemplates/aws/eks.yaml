---
apiVersion: cluster.x-k8s.io/v1alpha4
kind: Cluster
metadata:
  name: "{{.Cluster.Name}}"
  namespace: "{{.Cluster.Namespace}}"
  labels:
    cluster.x-k8s.io/cluster-name: "{{.Cluster.Name}}"
    cluster.x-k8s.io/cluster-namespace: "{{.Cluster.Namespace}}"
spec:
  {{if ne .ENV.ROLE_NAME ""}}
  roleName: {{.ENV.ROLE_NAME}}
  {{end}}
  paused: {{.Cluster.Spec.Paused}}
  {{if .Cluster.Spec.Network}}
  clusterNetwork:
    {{if .Cluster.Spec.Network.Pods}}
    pods:
      {{range .Cluster.Spec.Network.Pods.CIDRBlocks}}
      cidrBlocks:
        - {{. | quote}}
      {{end}}
    {{end}}
    {{if .Cluster.Spec.Network.Services}}
    services:
      {{range .Cluster.Spec.Network.Services.CIDRBlocks}}
      cidrBlocks:
        - {{. | quote}}
      {{end}}
    {{end}}
  {{end}}
  {{if .Cluster.Spec.ControlPlane}}
  {{if .Cluster.Spec.ControlPlane.Endpoint}}
  controlPlaneEndpoint:
    host: {{.Cluster.Spec.ControlPlane.Endpoint.Host}}
    port: {{.Cluster.Spec.ControlPlane.Endpoint.Port}}
  {{end}}
  {{end}}
  infrastructureRef:
    kind: AWSManagedControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    name: "{{.Cluster.Name}}"
    namespace: "{{.Cluster.Namespace}}"
  controlPlaneRef:
    kind: AWSManagedControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    name: "{{.Cluster.Name}}"
    namespace: "{{.Cluster.Namespace}}"

---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
kind: AWSManagedControlPlane
metadata:
  name: "{{.Cluster.Name}}"
  namespace: "{{.Cluster.Namespace}}"
  labels:
    cluster.x-k8s.io/cluster-name: "{{.Cluster.Name}}"
    cluster.x-k8s.io/cluster-namespace: "{{.Cluster.Namespace}}"
spec:
  eksClusterName: "{{.Cluster.Name}}"
  identityRef:
    kind: AWSClusterControllerIdentity
    name: default
  {{if .Account}}
  {{if not .Account.IsRoot}}
  iamAuthenticatorConfig:
    mapUsers:
    - username: "admin"
      userarn: {{.Account.GetUsername}}
      groups:
      - "system:masters"
  {{end}}
  {{end}}
  version: "{{.Cluster.Spec.KubernetesVersion}}"
  {{if .Cluster.Spec.InfrastructureProvider.SSHKey}}
  sshKeyName: "{{.Cluster.Spec.InfrastructureProvider.SSHKey}}"
  {{end}}
  region:  "{{ .Cluster.Spec.InfrastructureProvider.Region}}"
  {{if .Cluster.Spec.ControlPlane.InternalLB}}
  endpointAccess:
    private: true
  {{end}}
  {{if .Cluster.Spec.InfrastructureProvider.SSHKey}}
  {{if .Cluster.Spec.Bastion.Enabled}}
  {{$lenBlocks := len .Cluster.Spec.Bastion.AllowedCIDRBlocks}}
  bastion:
    enabled: {{ .Cluster.Spec.Bastion.Enabled}}
    {{if eq $lenBlocks 0}}
    disableIngressRules: {{.Cluster.Spec.Bastion.DisableIngressRules}}
    {{end}}
    instanceType: {{ .Cluster.Spec.Bastion.InstanceType}}
    allowedCIDRBlocks:
    {{- range  .Cluster.Spec.Bastion.AllowedCIDRBlocks}}
      - {{.}}
    {{- end}}
  {{end}}
  {{end}}
  {{if  .Cluster.Spec.Network}}
  network:
    {{if  .Cluster.Spec.Network.VPC}}
    vpc:
      {{if  .Cluster.Spec.Network.VPC.ID}}
      id: {{ .Cluster.Spec.Network.VPC.ID}}
      {{end}}
      {{if  .Cluster.Spec.Network.MultiZone}}
      availabilityZoneUsageLimit: 3
      {{else}}
      availabilityZoneUsageLimit: 2
      {{end}}
      {{if  .Cluster.Spec.Network.VPC.CIDRBlock}}
      cidrBlock: {{ .Cluster.Spec.Network.VPC.CIDRBlock}}
      {{end}}
    {{end}}
    subnets:
    {{range  .Cluster.Spec.Network.Subnets}}
    -
     {{if .ID}}
     id: {{.ID}}
     {{end}}
     {{if .CIDRBlock}}
     cidrBlock: {{.CIDRBlock}}
     {{end}}
     {{if .Zone}}
     availabilityZone: {{.Zone}}
     {{end}}
     {{if .IsPublic}}
     isPublic: {{.IsPublic}}
     {{end}}
    {{end}}
  {{end}}

{{$name := .Cluster.Name}}
{{$namespace := .Cluster.Namespace}}
{{$k8s := .Cluster.Spec.KubernetesVersion}}
{{$sshKey := .Cluster.Spec.InfrastructureProvider.SSHKey}}
{{$uid := .Cluster.Status.LastUsedUID}}
{{$env := .ENV}}
{{$workersChanged := .WorkersChanged}}
{{$olduid := .OldID}}
{{range $index, $element := .Cluster.Spec.Workers}}
{{$changed := containInt $workersChanged $index}}
{{$newuid := $uid}}
{{if not $changed}}
{{$newuid = $olduid}}
{{end}}
---
apiVersion: cluster.x-k8s.io/v1alpha4
kind: MachinePool
metadata:
  name: "{{$name}}-mp-{{$index}}"
  namespace: "{{$namespace}}"
  labels:
    cluster.x-k8s.io/cluster-name: "{{$name}}"
    cluster.x-k8s.io/cluster-namespace: "{{$namespace}}"
spec:
  clusterName: {{$name}}
  replicas: {{$element.Replicas}}
  template:
    spec:
      bootstrap:
        dataSecretName: ""
      clusterName: {{$name}}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
        kind: AWSManagedMachinePool
        name: "{{$name}}-mp-{{$index}}"
        namespace: "{{$namespace}}"
      version: "{{$k8s}}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: AWSManagedMachinePool
metadata:
  name: "{{$name}}-mp-{{$index}}"
  namespace: "{{$namespace}}"
  labels:
    cluster.x-k8s.io/cluster-name: "{{$name}}"
    cluster.x-k8s.io/cluster-namespace: "{{$namespace}}"
spec:
  eksNodegroupName: "{{$name}}-mp-{{$index}}"
  {{if ne $env.ROLE_NAME ""}}
  roleName: "-nodegroup-iam-service-role_{{$name}}-{{$name}}-mp-{{$index}}"
  {{end}}
  {{if $element.Labels}}
  labels:
    {{range $key, $value := $element.Labels}}
    {{$key}}: {{$value | quote}}
    {{end}}
  {{end}}
  {{if $element.Taints}}
  taints:
    {{range $element.Taints}}
    - key: {{.Key}}
      value: {{.Value}}
      effect: {{slugtaint .Effect}}
    {{end}}
  {{end}}
  {{if $element.ProviderTags}}
  additionalTags:
    {{range $key, $value := $element.ProviderTags}}
    {{$key}}: {{$value | quote}}
    {{end}}
  {{end}}
  scaling:
    {{if $element.Autoscale.Enabled}}
    minSize: {{$element.Autoscale.MinSize}}
    maxSize: {{$element.Autoscale.MaxSize}}
    {{else}}
    minSize: {{$element.Replicas}}
    maxSize: {{$element.Replicas}}
  {{end}}
  instanceType: "{{$element.MachineType}}"
  {{if $sshKey}}
  remoteAccess:
    sshKeyName: "{{$sshKey}}"
    public: true
  {{end}}
  {{if $element.Subnet}}
  subnetIDs:
    - {{$element.Subnet}}
  {{end}}
{{end}}
